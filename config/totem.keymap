//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    global-quick-tap;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_enter {
            timeout-ms = <100>;
            key-positions = <17 16 18>;
            bindings = <&kp LG(LS(T))>;
        };

        bluetooth {
            bindings = <&lt 3 K_COFFEE>;
            key-positions = <20 31>;
        };

        screenshot {
            bindings = <&kp LG(LS(X))>;
            key-positions = <22 23 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BASE";
            bindings = <
           &kp Q  &kp W       &kp E                    &kp R        &kp T           &kp Y          &kp U        &kp I        &kp O       &kp P
           &kp A  &mt LALT S  &mt LCTRL D              &mt LSHFT F  &kp G           &kp H          &mt RSHFT J  &mt RCTRL K  &mt RALT L  &kp SEMICOLON
&kp TILDE  &kp Z  &kp X       &kp C                    &kp V        &kp B           &kp N          &kp M        &kp COMMA    &kp DOT     &kp SLASH      &mt LS(LA(LC(LEFT_GUI))) SINGLE_QUOTE
                              &mt LEFT_COMMAND ESCAPE  &lt 1 TAB    &lt 2 DELETE    &kp BACKSPACE  &kp SPACE    &kp ENTER
            >;
        };

        nav_layer {
            bindings = <
        &trans          &trans    &kp UP         &trans       &kp LEFT_BRACE          &kp RIGHT_BRACE        &kp N7  &kp N8  &kp N9  &kp PLUS
        &kp LEFT_SHIFT  &kp LEFT  &kp DOWN       &kp RIGHT    &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp N4  &kp N5  &kp N6  &kp MINUS
&trans  &trans          &trans    &kp PAGE_DOWN  &kp PAGE_UP  &kp LEFT_BRACKET        &kp RIGHT_BRACKET      &kp N1  &kp N2  &kp N3  &kp ASTERISK  &kp LEFT_ALT
                                  &trans         &trans       &trans                  &trans                 &trans  &kp N0
            >;

            label = "NAVI";
        };

        sim_layer {
            bindings = <
        &kp EXCL  &kp AT         &kp HASH          &kp DOLLAR  &kp PERCENT          &kp CARET             &kp AMPERSAND           &kp ASTERISK             &kp QUESTION           &kp LC(LA(T))
        &trans    &kp C_AC_BACK  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_UP      &kp LA(LC(E))         &kp LA(LC(D))           &kp LA(LC(F))            &kp LA(LC(G))          &kp LA(LC(ENTER))
&trans  &trans    &trans         &trans            &trans      &kp C_VOLUME_DOWN    &kp LA(LC(LG(LEFT)))  &kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT_ARROW))  &kp LC(LG(LA(RIGHT)))  &trans             &kp LA(LC(I))
                                 &trans            &trans      &trans               &trans                &trans                  &trans
            >;

            label = "SYM";
        };

        BT_LAYER {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans        &trans        &trans        &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &bt BT_CLR_ALL
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;

            label = "bt_layer";
        };
    };
};
