//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    global-quick-tap;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_enter {
            timeout-ms = <100>;
            key-positions = <17 16 18>;
            bindings = <&kp LG(LS(T))>;
        };

        bluetooth_lock {
            bindings = <&lt 4 LG(LC(Q))>;
            key-positions = <20 31>;
        };

        window_lock {
            bindings = <&lt 3 C_AL_CALCULATOR>;
            key-positions = <36 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            label = "BASE";
            bindings = <
                    &kp Q  &kp W       &kp E           &kp R                   &kp T           &kp Y          &kp U        &kp I        &kp O       &kp P
                    &kp A  &mt LALT S  &mt LCTRL D     &mt LSHFT F             &kp G           &kp H          &mt RSHFT J  &mt RCTRL K  &mt RALT L  &kp SEMICOLON
&mt LEFT_SHIFT TAB  &kp Z  &kp X       &kp C           &kp V                   &kp B           &kp N          &kp M        &kp COMMA    &kp DOT     &kp FSLH       &mt LS(LA(LC(LEFT_GUI))) SINGLE_QUOTE
                                       &kp LEFT_SHIFT  &mt LEFT_COMMAND GRAVE  &lt 2 DELETE    &kp BACKSPACE  &lt 1 SPACE  &kp ENTER
            >;
        };

        programming {
            bindings = <
        &kp EXCL   &kp AT_SIGN  &kp SINGLE_QUOTE   &kp QUESTION  &kp PERCENT    &kp CARET  &kp LT                 &kp GT             &kp UNDER        &trans
        &kp MINUS  &kp ASTRK    &kp DOUBLE_QUOTES  &kp COLON     &trans         &trans     &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp LEFT_BRACE   &kp EQUAL
&trans  &kp HASH   &kp DOLLAR   &kp AMPS           &kp PIPE      &trans         &trans     &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &trans     &trans
                                &trans             &trans        &trans         &trans     &trans                 &trans
            >;

            label = "prog";
        };

        nav_layer {
            bindings = <
        &trans  &trans    &kp UP    &trans     &trans           &trans  &kp N7                 &kp N8  &kp N9  &kp PLUS
        &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_UP      &trans  &mt LEFT_ALT NUMBER_4  &kp N5  &kp N6  &kp MINUS
&trans  &trans  &trans    &trans    &trans     &kp PAGE_DOWN    &trans  &kp N1                 &kp N2  &kp N3  &kp ASTERISK  &kp FSLH
                          &trans    &trans     &trans           &trans  &trans                 &kp N0
            >;

            label = "NAVI";
        };

        sim_layer {
            bindings = <
        &trans  &trans         &trans                &trans                &trans               &trans                &trans                  &trans                   &trans                 &kp LC(LA(ENTER))
        &trans  &kp C_AC_BACK  &kp C_PLAY_PAUSE      &kp C_NEXT            &kp C_VOLUME_UP      &kp LA(LC(E))         &kp LA(LC(D))           &kp LA(LC(F))            &kp LA(LC(G))          &kp LA(LC(T))
&trans  &trans  &trans         &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_DOWN    &kp LA(LC(LG(LEFT)))  &kp LA(LC(LEFT_ARROW))  &kp LA(LC(RIGHT_ARROW))  &kp LC(LG(LA(RIGHT)))  &trans             &kp LA(LC(I))
                               &trans                &trans                &trans               &trans                &trans                  &trans
            >;

            label = "SYM";
        };

        BT_LAYER {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans          &trans        &trans        &trans        &trans
        &trans  &trans  &trans  &trans  &trans    &trans          &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans
                        &trans  &trans  &trans    &bt BT_CLR_ALL  &trans        &trans
            >;

            label = "bt_layer";
        };
    };
};
